if (-not ([System.Management.Automation.PSTypeName]'ServerCertificateValidationCallback').Type)
{
$certCallback = @"
    using System;
    using System.Net;
    using System.Net.Security;
    using System.Security.Cryptography.X509Certificates;
    public class ServerCertificateValidationCallback
    {
        public static void Ignore()
        {
            if(ServicePointManager.ServerCertificateValidationCallback ==null)
            {
                ServicePointManager.ServerCertificateValidationCallback +=
                    delegate
                    (
                        Object obj,
                        X509Certificate certificate,
                        X509Chain chain,
                        SslPolicyErrors errors
                    )
                    {
                        return true;
                    };
            }
        }
    }
"@
    Add-Type $certCallback
 }
[ServerCertificateValidationCallback]::Ignore()

#If you're manually running and know what you want to get
#Invoke-WebRequest -Uri "https://192.168.0.125/pub/export/$file" -OutFile "C:\users\tkaczynski\desktop\$file"

#If you want to list files, and collect them
$r=iwr "https://192.168.0.125/pub/export/" -UseBasicParsing
$files = $r.Links |?{$_.href -match ".zip"}
$files.href


ForEach ($file in $files) {
    if ($file -ne "contentview.zip"){
        Invoke-WebRequest -Uri "https://192.168.0.125/pub/export/$file" -OutFile "C:\users\tkaczynski\desktop\$file"
    }
}
